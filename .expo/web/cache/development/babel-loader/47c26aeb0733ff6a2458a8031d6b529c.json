{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\saran.kumar\\\\Desktop\\\\Build-a-Restaurant-App-with-React-Native\\\\src\\\\screens\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _onLoginPressed = function _onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread({}, email, {\n        error: emailError\n      }));\n      setPassword(_objectSpread({}, password, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.navigate('Search');\n  };\n\n  return React.createElement(Background, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(BackButton, {\n    goBack: function goBack() {\n      return navigation.navigate('HomeScreen');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgotPasswordScreen');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onLoginPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"sources":["C:/Users/saran.kumar/Desktop/Build-a-Restaurant-App-with-React-Native/src/screens/Login.js"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","_onLoginPressed","emailError","passwordError","navigate","text","styles","forgotPassword","label","StyleSheet","create","width","alignItems","marginBottom","row","flexDirection","marginTop","color","colors","secondary","link","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\nimport Background from '../components/Background';\r\nimport Logo from '../components/Logo';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport TextInput from '../components/TextInput';\r\nimport BackButton from '../components/BackButton';\r\nimport { theme } from '../core/theme';\r\nimport { emailValidator, passwordValidator } from '../core/utils';\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState({ value: '', error: '' });\r\n  const [password, setPassword] = useState({ value: '', error: '' });\r\n\r\n  const _onLoginPressed = () => {\r\n    const emailError = emailValidator(email.value);\r\n    const passwordError = passwordValidator(password.value);\r\n\r\n    if (emailError || passwordError) {\r\n      setEmail({ ...email, error: emailError });\r\n      setPassword({ ...password, error: passwordError });\r\n      return;\r\n    }\r\n\r\n    navigation.navigate('Search');\r\n  };\r\n\r\n  return (\r\n    <Background>\r\n      <BackButton goBack={() => navigation.navigate('HomeScreen')} />\r\n\r\n      <Logo />\r\n\r\n      <Header>Welcome back.</Header>\r\n\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={text => setEmail({ value: text, error: '' })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={text => setPassword({ value: text, error: '' })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('ForgotPasswordScreen')}\r\n        >\r\n          <Text style={styles.label}>Forgot your password?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Button mode=\"contained\" onPress={_onLoginPressed}>\r\n        Login\r\n      </Button>\r\n\r\n    </Background>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  label: {\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.primary,\r\n  },\r\n});\r\n\r\nexport default memo(LoginScreen);\r\n"]},"metadata":{},"sourceType":"module"}